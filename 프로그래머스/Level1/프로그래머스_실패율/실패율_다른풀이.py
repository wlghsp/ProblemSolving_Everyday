"""
- 스테이지 마다 실패율을 구해서 배열에 넣고 내림차순 정렬을 한 뒤 반환해야 한다.
- 실패율을 구하기 위해선 실패율 정의에 나온 분자와 분모를 각각 알아야 한다.
- 스테이지마다 실패율을 한 번에 구하기 복잡하다면 분자, 분모를 먼저 따로 구해 두고 나중에 계산하는 방법도 좋다.

1. 스테이지마다 실패율의 분자(스테이지에 도달했으나 아직 클리어하지 못한 플레이어의 수)를 a에 저장
2. 실패율의 분모를 b에 저장
3. 그 다음 모든 스테이지의 실패율을 저장한다.
4. i번째 스테이지의 실패율은 a[i] /b[i]
5. 분모는 0이 될 수 없는데 실패율은 0으로 정의한다고 했으므로 따로 처리
6. 실패율과 스테이지 번호를 쌍으로 묶어 배열에 넣고 내림차순 정렬, 커스텀 정렬
7. 실패율은 내림차순, 스테이지 번호는 오름차순

"""
def solution(N, stages):
    a = [0] * (N + 2)
    b = [0] * (N + 2)
    for stage in stages:
        a[stage] += 1
        b[stage] += 1
    for i in range(N, -1, -1):
        b[i] += b[i + 1]

    arr = [(a[i] / b[i] if b[i] else 0, i) for i in range(1, N + 1)]
    arr.sort(key=lambda x: (-x[0], x[1]))

    return [i[1] for i in arr]

N = 5
stages = [2,1,2,6,2,4,3,3]
print(solution(N, stages))
